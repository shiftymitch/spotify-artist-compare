{"version":3,"sources":["components/Nav/Nav.jsx","components/Footer.jsx","components/Container/index.js","components/SearchForm/index.js","components/SearchResults/index.js","components/SpotifySearch.jsx","components/Home.jsx","components/Compare.jsx","App.js","serviceWorker.js","index.js"],"names":["Nav","className","src","alt","to","window","location","pathname","id","Footer","href","Container","props","fluid","SearchForm","value","search","onChange","handleInputChange","name","list","type","placeholder","onClick","handleFormSubmit","SearchResults","results","slice","map","result","key","target","rel","external_urls","spotify","images","url","followers","total","toString","replace","popularity","genres","join","topTracks","track","relatedArtists","artist","SpotifySearch","useState","token","setToken","setSearch","setResults","setTopTracks","setRelatedArtists","useEffect","axios","get","then","res","data","catch","e","console","log","artistCount","event","preventDefault","artists","items","filter","filtered","length","res2","tracks","res3","err","Compare","App","exact","path","component","Home","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.44890695.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n  return (\r\n      <div className=\"navbar navbar-expand-lg position-sticky justify-content-between\">\r\n        <p className=\"navbar-brand ml-5 mr-5\"><img src=\"/spotify_icon.png\" alt=\"spotify-icon\"></img><strong className=\"ml-3\">Spotify Artist Compare</strong></p>\r\n        <Link to={() => {\r\n          if (window.location.pathname === \"/compare\") {\r\n            return `/`;\r\n          } else {\r\n            return \"/compare\";\r\n          }\r\n        }}><button className=\"navbar-item btn btn-sm btn-outline-success mr-auto\" id=\"compare\" >Compare</button></Link>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <h5 className=\"text-center align-bottom mt-5 mb-5\" >Built by <a href=\"https://github.com/shiftymitch\">Mitch Henderson</a></h5>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\n\nfunction Container(props) {\n  return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`} {...props} />;\n}\n\nexport default Container;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction SearchForm(props) {\n  return (\n    <form className=\"search text-center\">\n      <div className=\"form-group\">\n        <input\n          value={props.search}\n          onChange={props.handleInputChange}\n          name=\"search\"\n          list=\"results\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search for an artist...\"\n          id=\"search\"\n        />\n        <button type=\"submit\" onClick={props.handleFormSubmit} className=\"btn btn-outline-success form-control\">\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nfunction SearchResults(props) {\n  function image() {\n    if (props.results[0].images[0]) {\n      return props.results[0].images[0].url;\n    } else {\n      return \"\";\n    }\n  }\n  \n  return (\n    <div className=\"d-flex justify-content-around\">\n      <ul className=\"search-results\">\n        {props.results.slice(0, 1).map(result => (\n          <li key={result.id} className=\"list-group-item\">\n            <div className=\"row\">  \n              <div className=\"col-4\">\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={result.external_urls.spotify}><img className=\"img-fluid\" src={image()} alt={result.name}></img></a>\n              </div>\n              <div className=\"col\">\n                <h5><a target=\"_blank\" rel=\"noopener noreferrer\" href={result.external_urls.spotify}>{result.name}</a></h5>\n                <p><strong>Followers: </strong>{numberWithCommas(result.followers.total)}</p>\n                <p><strong>Popularity: </strong>{result.popularity}</p>\n                <p><strong>Genres: </strong>{result.genres.join(\", \")}</p>\n              </div> \n            </div>\n            <hr></hr>\n            <div className=\"row\">\n              <div className=\"col\">\n                <ul className=\"track-results mb-5\">\n                  <h5>Top Tracks:</h5>\n                  {props.topTracks.map(track => (\n                    <li key={track.id} className=\"list-group-item\"><a href={track.external_urls.spotify}>{track.name}</a></li>\n                  ))}\n                </ul>\n              </div>\n              <div className=\"col\">\n                <ul className=\"related-artists mb-5\">\n                  <h5>Related Artists:</h5>\n                  {props.relatedArtists.map(artist => (\n                    <li key={artist.id} className=\"list-group-item\"><a href={artist.external_urls.spotify}>{artist.name}</a></li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default SearchResults;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Container from \"./Container\";\nimport SearchForm from \"./SearchForm\";\nimport SearchResults from \"./SearchResults\";\n\nconst SpotifySearch = props => {\n  const [token, setToken] = useState([]);\n  const [search, setSearch] = useState();\n  const [results, setResults] = useState([]);\n  const [topTracks, setTopTracks] = useState([]);\n  const [relatedArtists, setRelatedArtists] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get('/api/token')\n      .then(res => {\n        setToken(res.data.token);\n      })\n      .catch(e => console.log(e));\n  }, []);\n\n  function handleInputChange(event) {\n    setSearch(event.target.value);\n  };\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n\n    //!SpotifySearch API\n    \n    // Artist Search\n    axios.get(\n      \"https://api.spotify.com/v1/search?q=\"\n      + search\n      +\"&type=artist\"\n      +\"&access_token=\"\n      +token\n    )\n      .then(res => {\n        setResults(res.data.artists.items.filter(filtered => filtered.name.length === search.length));\n        \n        // Get Top Tracks\n        axios.get(\n          \"https://api.spotify.com/v1/artists/\"\n          + res.data.artists.items[0].id\n          +\"/top-tracks?\"\n          +\"country=US\"\n          +\"&access_token=\"\n          +token\n        )\n          .then(res2 => {\n            setTopTracks(res2.data.tracks);\n          })\n\n\n        // Get Related Artists\n        axios.get(\n          \"https://api.spotify.com/v1/artists/\"\n          + res.data.artists.items[0].id\n          +\"/related-artists?\"\n          +\"&access_token=\"\n          +token\n        )\n          .then(res3 => {\n            setRelatedArtists(res3.data.artists);\n          })\n      })\n      .catch(err => console.log(err));\n  };\n\n  return (\n    <div>\n      <Container>\n        <h3 id=\"search-header\" className=\"text-center\">Artist {props.artistCount}</h3>\n        <SearchForm\n          handleFormSubmit={handleFormSubmit}\n          handleInputChange={handleInputChange}\n        />\n        <SearchResults results={results} topTracks={topTracks} relatedArtists={relatedArtists}/>\n      </Container>\n    </div>\n  );\n};\n\nexport default SpotifySearch;","import React from 'react';\r\nimport SpotifySearch from \"./SpotifySearch.jsx\"\r\n\r\nfunction Compare() {\r\n  return (\r\n      <div className=\"row ml-5 mr-5\">\r\n        <div className=\"col\">\r\n            <SpotifySearch artistCount=\"Search\"/>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Compare;","import React from 'react';\r\nimport SpotifySearch from \"./SpotifySearch.jsx\"\r\n\r\nfunction Compare() {\r\n  return (\r\n      <div className=\"row ml-5 mr-5\">\r\n        <div className=\"col\">\r\n            <SpotifySearch artistCount={1}/>\r\n        </div>\r\n        <div className=\"col\">\r\n            <SpotifySearch artistCount={2} />\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Compare;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Nav from \"./components/Nav/Nav.jsx\"\nimport Footer from \"./components/Footer.jsx\"\nimport Home from './components/Home.jsx';\nimport Compare from './components/Compare.jsx';\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/compare\" component={Compare} />\n        </Switch>\n      <Footer />\n    </Router>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}